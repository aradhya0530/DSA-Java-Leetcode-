Question-
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

Solution-
class Solution {
 public void sortColors(int[] nums) {
    int s = nums[0]; // save the first index value
    nums[0] = 1; // overwrite with 1
    int l = 0, r = 0; 
    for (int i = 1; i < nums.length; i++) {
      switch (nums[i]) {
        case 0:
          nums[l] = 0;
          nums[r + 1] = 1;
          if (r + 1 != i) {
            nums[i] = 2;
          }
          l++;
          r++;
          break;

        case 1:
          nums[r + 1] = 1;
          if (r + 1 != i) {
            nums[i] = 2;
          }
          r++;
          break;
      }
    }
    
    if (s == 0) nums[l] = 0;
    else if (s == 2) nums[r] = 2;
  }
}
